<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Chiching&#39;s Notes</title>
    <link>http://chiching.github.io/tags/python/</link>
    <description>Recent content in Python on Chiching&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 20 May 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://chiching.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ctypes</title>
      <link>http://chiching.github.io/posts/python/ctypes/</link>
      <pubDate>Wed, 20 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chiching.github.io/posts/python/ctypes/</guid>
      <description>get methods from a dll C:\Users\chiching\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\bin&amp;gt;link.exe /dump /exports d:/xfic2.dll
the result is something like this: ordinal hint RVA name 1 0 0000100F ??4CIcDllwd@@QAEAAV0@ABV0@@Z 2 1 00001028 _CardAdd@8 3 2 0000145B _CardPassAll@8 4 3 00001366 _ClearData@12 5 4 000012D0 _CloseCom@0 6 5 00001483 _CmdClearAdmin@0
or use Depends software to check it.
or&amp;hellip;..
C:\Users\chiching\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\bin&amp;gt;DUMPBIN -EXPORTS d:/xfic2.dll</description>
    </item>
    
    <item>
      <title>Python Decorater</title>
      <link>http://chiching.github.io/posts/python/decorater/</link>
      <pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://chiching.github.io/posts/python/decorater/</guid>
      <description> decorater @log def now(): print &#39;datetime&#39;  @log equal to now = log(now)
with parameter @log(&#39;execute&#39;) equal to now = log(&#39;execute&#39;)(now)
functools.wraps will do something like this: wrapper.__name__ = func.__name__
import functools def log(text): def decorator(func): @functools.wraps(func) def wrapper(*args, **kw): print &#39;%s %s():&#39; % (text, func.__name__) return func(*args, **kw) return wrapper return decorator  </description>
    </item>
    
  </channel>
</rss>